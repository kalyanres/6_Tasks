1. Читатель приходит в библиотеку:
    сообщение: "Добрый день! Хотите воспользоваться услугами нашей библиотеки? (y/n): "
    вводим n -- выход
    вводим y -- выводим список всех читателей
    сообщение: "Пожалуйста, найдите себя в списке читателей. (введите номер): "
    вводим номер
    сообщение: "Приветствуем вас, уважаемый " + name + ", в нашей библиотеке!"
2.сообщение: "Хотите вернуть книгу? (y/n): "
    вводим n -- переходим к след сообщению
    вводим y -- выводим список книг, которые числятся на читателе, 
                * если их нет, то выводим сообщение "У вас нет книг."
                и переходим к след сообщению
                * если книга одна, то возврат производим автоматически
                * если книг больше одной, то выводим список с сообщением
    "Введите номер возвращаемой книги: "
    Возврат книги: вызываем метод из LibraryLogic -- boolean returnBook(Library, int, int)
            * удаляем книгу из массива читателя
            * делаем книгу доступной в библиотеке
    если удачно и книги еще есть, то повторяем сообщение "Хотите вернуть еще книгу? (y/n): "
    если нет книг, то выводим сообщение "У вас нет книг"

3.  след сообщение: "Хотите взять книгу? (y/n): "
    вводим n -- переходим к след сообщению
    вводим y -- выводим список книг, которые числятся в библиотеке 
    сообщение: "Пожалуйста, найдите нужную книгу (введите номер): "
    вводим номер
    если занята: "К сожалению данная книга находится на руках. Хотите выбрать что-то еще?"
    сообщение: "Вы выбрали книгу " + author + " " + title + ". Она сейчас " +
                (свободна или на руках)
    сообщение: "Оформить? (y/n): "
    вводим n -- возврат к сообщению "Хотите взять книгу? (y/n): "
    вводим y
    Вызываем метод из LibraryLogic -- boolean takeBook(int)
        если удачно, то выводим сообщение "Книга добавлена. Хотите взять еще? (y/n): "
4. сообщение: "Хотите порекомендовать книгу для библиотеки? (нажмите "o")
    вводим 'o': считываем данные с клавиатуры
    "введите автора: "
    "введите название: "
    "это бумажная книга? (y/n): "
    далее формируется объект Book и отправляется администратору с пометкой от кого
    формируется как массив ArrayList<Book>



Реализация функций администратора:
    при входе в библиотеку администратор вместо выбора себя номером из списка
    вводит "sudo"
    ему предлагается ввести пароль: "LibraryBook"
    далее сразу выводится список предложенных книг от посетителей
    после этого сообщение: "Хотите добавить в список книгу от читателя? (нажмите 'a')"
                           "Хотите удалить книгу из списка от читателя? (нажмите 'd')"
                           "Хотите добавить книгу в список самостоятельно? (нажмите 's')"
                           "Выйти (нажмите q)"

  нажимаем 'a': 
    если одна книга в списке, то добавляется автоматически
    если несколько, то выводим сообщение "Введите номер книги: "
    вызываем метод library.addBook(Book book)
    каждому присылаем сообщение о добавленной книге
  нажимаем 's': считываем данные с клавиатуры
    "введите автора: "
    "введите название: "
    "это бумажная книга? (y/n): "
    вызываем метод library.addBook(Book book)
    каждому присылаем сообщение о добавленной книге
  нажимаем 'c':
    вызываем метод clearMail() для полной очистки почты


  нажимаем 'q':
    если были изменения, переписываем файл library.txt  
    выходим из файла


    
    
    
